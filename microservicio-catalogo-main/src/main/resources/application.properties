spring.application.name=biblioteca
spring.datasource.url=jdbc:h2:mem:catalogodb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
server.port=8082


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/biblioteca
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=biblioteca
keycloak.resource=catalogo-service
keycloak.public-client=false
keycloak.credentials.secret=Y5J7V2yufMDbTqnk3S9orrp0Z9lRFZa8
logging.level.org.springframework.security=DEBUG

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.paths-to-match=/**

# Que hace un servicio en una arquitectura microservice?